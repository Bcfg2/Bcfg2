#!/usr/bin/env python

"""The XML-RPC Bcfg2 server."""
__revision__ = '$Revision$'

import logging
import sys

import Bcfg2.Logger
import Bcfg2.Options
import Bcfg2.Component
import Bcfg2.Server.Plugins.Metadata
from Bcfg2.Server.Core import CoreInitError

logger = logging.getLogger('bcfg2-server')

if __name__ == '__main__':

    Bcfg2.Options.add_options(
        Bcfg2.Options.DAEMON,
        Bcfg2.Options.SERVER_KEY,
        Bcfg2.Options.SERVER_CERT,
        Bcfg2.Options.SERVER_CA,
        Bcfg2.Options.SERVER_LISTEN_ALL,
        Bcfg2.Options.SERVER_LOCATION,
        Bcfg2.Options.LOGGING_FILE_PATH,
        Bcfg2.Options.SERVER_PROTOCOL,
    )

    Bcfg2.Server.Core.Core.register_options()
    args = Bcfg2.Options.args()

    try:
        # check whether the specified bcfg2.conf exists
        Bcfg2.Component.run_component(Bcfg2.Server.Core.Core.from_config,
                                      listen_all=args.listen_all,
                                      location=args.server_location,
                                      daemon = args.daemonize,
                                      pidfile_name = args.daemonize,
                                      protocol = args.communication_protocol,
                                      to_file=args.log_path,
                                      register=False,
                                      cls_kwargs={'args': args},
                                      keyfile=args.ssl_key,
                                      certfile=args.ssl_cert,
                                      ca=args.ca_cert,
                                      procname=Bcfg2.Server.Core.Core.implementation,
                                      )
    except CoreInitError:
        msg = sys.exc_info()[1]
        logger.error(msg)
        logger.error("exiting")
        sys.exit(1)
    except KeyboardInterrupt:
        sys.exit(1)
    sys.exit(0)

