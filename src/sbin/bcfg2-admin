#!/usr/bin/env python
"""bcfg2-admin is a script that helps to administrate a Bcfg2 deployment."""

import logging
from Bcfg2 import Options
# Compatibility import
from Bcfg2.Bcfg2Py3k import StringIO
from Bcfg2.PluginLoader import load_exactly_one, MultipleEntriesError, NoEntriesError
from pkg_resources import iter_entry_points
from Bcfg2.metargs import Option

log = logging.getLogger('bcfg2-admin')

ADMIN_ENTRY_POINT = 'bcfg2.admin'

def mode_import(modename):
    """Load the bcfg2.admin entry_point named modename"""
    return load_exactly_one(ADMIN_ENTRY_POINT, modename)

def get_modes():
    """Get all available modes, except for the base mode."""
    return sorted(entry.name for entry in iter_entry_points(ADMIN_ENTRY_POINT))

def create_description():
    """Create the description string from the list of modes."""
    modes = get_modes()
    description = StringIO()
    description.write("Available modes are:\n\n")
    for mode in modes:
        try:
            description.write(("   %-15s   %s\n" %
                   (mode, mode_import(mode).__shorthelp__)))
        except (MultipleEntriesError, NoEntriesError):
            pass
    return description.getvalue()

def main():
    formatted_modes = ", ".join(get_modes())
    Options.add_options(
        Options.VERBOSE,
        Option('mode', choices=get_modes(), metavar='MODE',
               help="Bcfg2 admin mode. Modes: %s" % formatted_modes)
    )

    args = Options.bootstrap()
    logging.basicConfig()

    try:
        mode_cls = mode_import(args.mode)
    except (MultipleEntriesError, NoEntriesError):
        log.exception("Failed to load admin mode %s" % args.mode)
        raise SystemExit(1)
    mode = mode_cls()
    mode(Options.args())
    if hasattr(mode, 'bcore'):
        mode.bcore.shutdown()

if __name__ == '__main__':
    try:
        main()
    except KeyboardInterrupt:
        raise SystemExit(1)
